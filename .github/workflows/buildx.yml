# # Source: https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
name: Create and publish a Docker image

on:
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Lower case github.repository
        run: echo "IMAGE_NAME=${IMAGE_NAME,,}" >>${GITHUB_ENV}
        env:
          IMAGE_NAME: '${{ github.repository }}'

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}

  pull-and-run-image-on-vultr:
    name: Pull and run image on Vultr
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: SSH command runner
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VULTR_IP }}
          username: ${{ secrets.VULTR_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |

            if [ -x "$(command -v docker)" ]; then
              echo "DOCKER IS INSTALLED"
            else
              echo "INSTALLING DOCKER"
              echo install docker on ubuntu 20.04
              sudo snap install docker
            fi

            # print working directory
            pwd

            # create a file on the server
            touch test.txt

            # pull the image
            docker pull $REGISTRY/$IMAGE_NAME

            # run the image
            docker run -d -p 80:3000 $REGISTRY/$IMAGE_NAME

            # check if the container is running
            docker ps
